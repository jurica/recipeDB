@page "/recipe/{id:guid}"
@inject HttpClient Http
@inject NavigationManager NavManager

@if (recipe == null)
{
    <p><em>Lade ...</em></p>
}
else
{
    <nav class="navbar sticky-top navbar-light bg-light mb-3">
        <span class="navbar-brand h1 my-0">@recipe.Name</span>
        <div class="form-inline">
            <button class="btn btn-link" @onclick="(c => NavManager.NavigateTo(recipe.editUrl()))"><i class="oi oi-pencil"></i></button>
            <button class="btn btn-link validation-message" @onclick="(c => showDeleteModal = true)"><i class="oi oi-delete"></i></button>
        </div>
    </nav>
    
    @if (showDeleteModal)
    {
        <div class="modal fade show" style="display: block;">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Löschen bestätigen</h4>
                        <button type="button" disabled="@modalDisabled" class="close" data-dismiss="modal" @onclick="(c => showDeleteModal = false)">&times;</button>
                    </div>
                    <div class="modal-body">
                        <p>Wirklich löschen? </p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" disabled="@modalDisabled" class="btn btn-secondary" data-dismiss="modal" @onclick="(c => showDeleteModal = false)">Abbrechen</button>
                        <button type="button" disabled="@modalDisabled" class="btn btn-danger" data-dismiss="modal" @onclick="deleteRecipe">Löschen</button>
                    </div>
                </div>
            </div>
        </div>
    <div class="modal-backdrop fade show"></div>
    }

    <div class="container-fluid ml-10">
        <div class="row">
            @* <img src="https://www.simply-yummy.de/files/styles/tec_frontend_large/public/flammkuchenteig.jpg?itok=uC6QtpfN"> *@
        </div>
        <div class="row">
            <div class="col-md-3">
                <h4>Zutaten</h4>
                <ul class="list-group list-group-flush">
                    @foreach (var ingredient in recipe.Ingredients)
                    {
                        <li class="list-group-item">@ingredient.Amount @ingredient.Unit - @ingredient.Name</li>
                    }
                </ul>
            </div>
            <div class="col-md-9">
                <h4>Zubereitung</h4>
                <ul class="list-group list-group-flush">
                    @foreach (var step in recipe.Steps)
                    {
                        <li class="list-group-item">
                            <h5 class="header">Schritt @stepCount</h5>
                            @step.Description
                        </li>
                        stepCount++;
                    }
                </ul>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid id { get; set; }

    private RecipeModel recipe;
    private int stepCount = 1;
    private bool showDeleteModal = false;
    private bool modalDisabled = false;

    private async void deleteRecipe()
    {
        modalDisabled = true;
        HttpResponseMessage response = await Http.DeleteAsync("http://192.168.2.221:8080/recipe/" + recipe.ID.ToString());
        showDeleteModal = false;
        NavManager.NavigateTo("recipe");
    }

    protected override async Task OnInitializedAsync()
    {
        recipe = await Http.GetFromJsonAsync<RecipeModel>("http://192.168.2.221:8080/recipe/" + @id.ToString());
    }
} 