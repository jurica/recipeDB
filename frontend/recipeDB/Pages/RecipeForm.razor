@page "/recipe/create"
@page "/recipe/{id:int}/edit"
@inject HttpClient Http
@inject NavigationManager NavManager

@if (recipe == null)
{
    <p><em>Lade ...</em></p>
} else {
@if (recipe.ID == 0) {
    <h4>Neues Rezept</h4>
} else {
    <h4>Rezept bearbeiten</h4>
}
<EditForm Model="@recipe" OnValidSubmit="@HandleValidSubmit">
    <ObjectGraphDataAnnotationsValidator />

<fieldset disabled="@formDisabled" >
    <div class="form-group mb-3">
        <InputText id="name" class="form-control" @bind-Value="recipe.Name" />
    </div>
    <div class="form-group mb-3">
        <h5>Zutaten und Mengenangaben</h5>
        @foreach (var ingredient in recipe.Ingredients)
        {
            <div class="form-row mb-3">
                <div class="col-10 input-group">
                    <InputText id="ingredientName" @bind-Value="ingredient.Name" class="form-control" />
                    <InputText id="ingredientAmount" @bind-Value="ingredient.Amount" class="form-control" />
                    <InputSelect id="ingredienUnit" @bind-Value="ingredient.Unit" class="form-control">
                        <option value="">Select classification ...</option>
                        <option value="g">g</option>
                        <option value="ml">ml</option>
                        <option value="Stück">Stück</option>
                        <option value="EL">EL</option>
                        <option value="TL">TL</option>
                    </InputSelect>
                </div>
                <div class="col btn-group">
                    <button type="button" class="btn btn-danger form-control-sm" disabled="@(recipe.Ingredients.Count() == 1)" @onclick="@( c => recipe.removeIngredient(ingredient))">
                        <i class="oi oi-minus"></i>
                    </button>
                    <button type="button" class="btn btn-secondary form-control-sm" disabled="@(recipe.Ingredients.IndexOf(ingredient) == 0)" @onclick="@( c => recipe.moveIngredientUp(ingredient))">
                        <i class="oi oi-caret-top"></i>
                    </button>
                    <button type="button" class="btn btn-secondary form-control-sm" disabled="@(recipe.Ingredients.IndexOf(ingredient) == recipe.Ingredients.Count()-1)" @onclick="@( c => recipe.moveIngredientDown(ingredient))">
                        <i class="oi oi-caret-bottom"></i>
                    </button>
                    <button type="button" class="btn btn-success form-control-sm" @onclick="@( c => recipe.addIgredientAfter(ingredient))">
                        <i class="oi oi-plus"></i>
                    </button>
                </div>
            </div>
        }
    </div>
    <div class="form-group mb-3">
        <h5>Schritte</h5>
        @foreach (var step in recipe.Steps)
        {
            <div class="form-row mb-3">
                <div class="col-10 input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">#@(recipe.Steps.IndexOf(step)+1)</div>
                    </div>
                    <InputTextArea id="step" class="form-control" @bind-Value="step.Description" />
                </div>
                <div class="col btn-group">
                    <button type="button" class="btn btn-danger form-control-sm" disabled="@(recipe.Steps.Count() == 1)" @onclick="@( c => recipe.removeStep(step))">
                        <i class="oi oi-minus"></i>
                    </button>
                    <button type="button" class="btn btn-secondary form-control-sm" disabled="@(recipe.Steps.IndexOf(step) == 0)" @onclick="@( c => recipe.moveStepUp(step))">
                        <i class="oi oi-caret-top"></i>
                    </button>
                    <button type="button" class="btn btn-secondary form-control-sm" disabled="@(recipe.Steps.IndexOf(step) == recipe.Steps.Count()-1)" @onclick="@( c => recipe.moveStepDown(step))">
                        <i class="oi oi-caret-bottom"></i>
                    </button>
                    <button type="button"class="btn btn-success form-control-sm" @onclick="@( c => recipe.addStepAfter(step))">
                        <i class="oi oi-plus"></i>
                    </button>
                </div>
            </div>
        }
    </div>
    <ValidationSummary />
    <button type="submit" class="btn btn-primary">Speichern</button>
    </fieldset>
</EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }

    private RecipeModel recipe;
    private bool formDisabled = false;

    protected override async Task OnInitializedAsync()
    {
        if (id == 0)
        {
            recipe = new RecipeModel()
            {
                Steps = new List<StepModel> { new StepModel { } },
                Ingredients = new List<IngredientModel> { new IngredientModel { } }
            };
        } else {
            recipe = await Http.GetFromJsonAsync<RecipeModel>("http://192.168.2.221:8080/recipe/" + @id.ToString());
        }
    }

    private async void HandleValidSubmit()
    {
        formDisabled = true;

        HttpResponseMessage response;
        if (recipe.ID == 0) {
            response = await Http.PutAsJsonAsync<RecipeModel>("http://192.168.2.221:8080/recipe", recipe);
        } else {
            response = await Http.PostAsJsonAsync<RecipeModel>("http://192.168.2.221:8080/recipe", recipe);
        }
        var responseData = await response.Content.ReadFromJsonAsync<RecipeModel>();
        NavManager.NavigateTo("recipe/" + responseData.ID.ToString());
    }
}
